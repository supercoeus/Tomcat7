<?xml version='1.0' encoding='utf-8'?>

<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
	 同一个物理机配置多个Server实例，必须使用不同端口
 -->
<Server port="8005" shutdown="SHUTDOWN">
  <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
  <!-- 安全监听. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JasperListener" />
  <!-- 防止内存泄露 due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- 全局命名资源，来定义一些外部访问资源，
	其作用是为所有引擎应用程序所引用的外部资源的定义
	-->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- -->
  <Service name="Catalina">

    <!--The connectors can use a shared executor, you can define one or more named thread pools-->
    <!--
    <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
        maxThreads="150" minSpareThreads="4"/>
    -->

    <!-- HTTP连接器 属性：address：指定连接器监听的地址，默认为所有地址，即0.0.0.0-->
    <Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />
    <!-- 使用共享线程池的Connector -->
    <!--
    <Connector executor="tomcatThreadPool"
               port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />
    -->
    <!-- SSL连接器 -->
    <!--
    <Connector port="8443" protocol="org.apache.coyote.http11.Http11Protocol"
               maxThreads="150" SSLEnabled="true" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" />
    -->

    <!-- AJP连接器 
	redirectPort：如果某连接器支持的协议是HTTP，当接收客户端发来的HTTPS请求时，则转发至此属性定义的端口
	acceptCount：设置等待队列的最大长度
	-->
    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />

    <!--  -->

    <!-- 配置负载均衡时要设置jvmRoute, via AJP ie :
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
    -->
    <Engine name="Catalina" defaultHost="localhost">
      <!--  -->
      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->

      <!-- 安全上下文 
		JAASRealm
		JDBCRealm 通过JDBC访问某关系型数据库表实现用户认证；
		JNDIRealm 基于JNDI使用目录服务实现认证信息的获取；
		MemoryRealm 查找tomcat-user.xml文件实现用户信息的获取；
		UserDatabaseRealm：基于UserDatabase文件(通常是tomcat-user.xml)实现用户认证，
		它实现是一个完全可更新和持久有效的MemoryRealm，因此能够跟标准的MemoryRealm兼容
	  -->
      <Realm className="org.apache.catalina.realm.LockOutRealm">
        <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
               resourceName="UserDatabase"/>
		<!--
		<Realm className="org.apache.catalina.realm.JDBCRealm" debug="99"
		 driverName="org.gjt.mm.mysql.Driver"
		 connectionURL="jdbc:mysql://localhost/authority"
		 connectionName="test" connectionPassword="test"
		 userTable="users" userNameCol="user_name"
		 userCredCol="user_pass"
		 userRoleTable="user_roles" roleNameCol="role_name" />
		-->
      </Realm>
			
	  <!-- 属性：
		unpackWARs 在启用此应用时是否对war格式的文件先进行展开
	  -->
      <Host name="localhost"  appBase="webapps"
            unpackWARs="true" autoDeploy="true">
		<!-- 配置应用context,一个Context表示tomcat实例中的一个Web应用程序 -->
		<!--
			<Context path="/examples" docBase="D:\" reloadable="true" />
			<Context path="/examples" docBase="D:\" reloadable="true" />
		-->
        <!-- 类似于过滤器 -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="localhost_access_log." suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />

      </Host>
	  <!--
	  <Host name="wangwanchao.wang"  appBase="webapps"
            unpackWARs="true" autoDeploy="true">
	    <Alias>wanchao.wang</Alias>
		
	  -->
    </Engine>
  </Service>
</Server>
